// Generated by CoffeeScript 1.6.3
var Tangerine;

Tangerine = {
  "db_name": window.location.pathname.split("/")[1],
  "design_doc": _.last(String(window.location).split("_design/")).split("/")[0]
};

Tangerine.$db = $.couch.db(Tangerine.db_name);

Backbone.couch_connector.config.db_name = Tangerine.db_name;

Backbone.couch_connector.config.ddoc_name = Tangerine.design_doc;

Backbone.couch_connector.config.global_changes = false;

_.templateSettings = {
  interpolate: /\{\{(.+?)\}\}/g
};

Tangerine.onBackButton = function(event) {
  if (Tangerine.activity === "assessment run") {
    if (confirm(t("NavigationView.message.incomplete_main_screen"))) {
      Tangerine.activity = "";
      return window.history.back();
    } else {
      return false;
    }
  } else {
    return window.history.back();
  }
};

Tangerine.config = new Backbone.Model({
  "_id": "/_docs/configuration.json"
});

Tangerine.config.fetch({
  error: function() {
    return console.log("could not fetch configuration");
  },
  success: function() {
    Tangerine.settings = new Settings({
      "_id": "settings"
    });
    return Tangerine.settings.fetch({
      success: function() {
        if (!Tangerine.settings.has("instanceId")) {
          Tangerine.settings.set("instanceId", Utils.humanGUID());
        }
        return Tangerine.onSettingsLoad();
      },
      error: function() {
        Tangerine.settings.set(Tangerine.config.get("defaults")['settings']);
        Tangerine.settings.set("instanceId", Utils.humanGUID());
        return Tangerine.settings.save(null, {
          error: function() {
            return console.log("couldn't save new settings");
          },
          success: function() {
            return Tangerine.onSettingsLoad();
          }
        });
      }
    });
  }
});

Tangerine.onSettingsLoad = function() {
  Tangerine.templates = new Template({
    "_id": "templates"
  });
  return Tangerine.templates.fetch({
    success: function() {
      return Tangerine.ensureAdmin(function() {
        return Tangerine.transitionUsers(function() {
          return $(function() {
            window.vm = new ViewManager();
            return $.i18n.init({
              "fallbackLng": "en",
              "lng": Tangerine.settings.get("language"),
              "resGetPath": "locales/__lng__/translation.json"
            }, function(t) {
              window.t = t;
              if (Tangerine.settings.get("context") !== "server") {
                document.addEventListener("deviceready", function() {
                  document.addEventListener("online", function() {
                    return Tangerine.online = true;
                  });
                  document.addEventListener("offline", function() {
                    return Tangerine.online = false;
                  });
                  /* Note, turns on menu button
                  document.addEventListener "menubutton", (event) ->
                    console.log "menu button"
                  , false
                  */

                  return document.addEventListener("backbutton", Tangerine.onBackButton, false);
                }, false);
              }
              Tangerine.router = new Router();
              Tangerine.user = Tangerine.settings.get("context") === "server" ? new User() : new TabletUser();
              Tangerine.nav = new NavigationView({
                user: Tangerine.user,
                router: Tangerine.router
              });
              Tangerine.log = new Log();
              return Tangerine.user.sessionRefresh({
                success: function() {
                  $("body").addClass(Tangerine.settings.get("context"));
                  return Backbone.history.start();
                }
              });
            });
          });
        });
      });
    }
  });
};

Tangerine.transitionUsers = function(callback) {
  if (Tangerine.settings.get("context") === "server" || Tangerine.settings.has("usersTransitioned")) {
    return callback();
  }
  return $.couch.login({
    name: "admin",
    password: "password",
    success: function() {
      var _this = this;
      return $.couch.userDb(function(uDB) {
        return uDB.allDocs({
          success: function(resp) {
            var docIds, finish, nextDoc;
            docIds = _.pluck(resp.rows, "id").filter(function(a) {
              return ~a.indexOf("org.couchdb");
            });
            nextDoc = function() {
              var id;
              id = docIds.pop();
              if (id == null) {
                return finish();
              }
              return uDB.openDoc(id, {
                success: function(doc) {
                  var hashes, name, newDoc, roles, teacher, teacherId;
                  teacher = null;
                  name = doc._id.split(":")[1];
                  hashes = doc.password_sha != null ? {
                    pass: doc.password_sha,
                    salt: doc.salt
                  } : TabletUser.generateHash("password");
                  teacherId = doc.teacherId;
                  if (teacherId == null) {
                    teacherId = Utils.humanGUID();
                    teacher = new Teacher({
                      "_id": teacherId,
                      "name": name
                    });
                  }
                  if (name === "admin") {
                    roles = ["_admin"];
                    hashes = TabletUser.generateHash("password");
                  } else {
                    roles = doc.roles || [];
                  }
                  newDoc = {
                    "_id": TabletUser.calcId(name),
                    "name": name,
                    "roles": roles,
                    "pass": hashes.pass,
                    "salt": hashes.salt,
                    "teacherId": teacherId,
                    "collection": "user"
                  };
                  return Tangerine.$db.saveDoc(newDoc, {
                    success: function(doc) {
                      if (teacher != null) {
                        return teacher.save(null, {
                          success: function() {
                            return nextDoc();
                          }
                        });
                      } else {
                        return nextDoc();
                      }
                    },
                    error: function(doc) {
                      return nextDoc();
                    }
                  });
                }
              });
            };
            finish = function() {
              return Tangerine.settings.save({
                "usersTransitioned": true
              }, {
                success: function() {
                  return $.couch.logout({
                    success: function() {
                      return callback();
                    }
                  });
                }
              });
            };
            return nextDoc();
          }
        });
      });
    }
  });
};

Tangerine.ensureAdmin = function(callback) {
  if (Tangerine.settings.get("context") !== "server" && !Tangerine.settings.has("adminEnsured")) {
    return $.couch.login({
      name: "admin",
      password: "password",
      success: function() {
        var _this = this;
        return $.couch.userDb(function(uDB) {
          return uDB.openDoc("org.couchdb.user:admin", {
            success: function() {
              return $.couch.logout({
                success: function() {
                  Tangerine.settings.save({
                    "adminEnsured": true
                  });
                  return callback();
                },
                error: function() {
                  return console.log("error logging out admin user");
                }
              });
            },
            error: function() {
              var _this = this;
              return $.ajax({
                url: "/_users/org.couchdb.user:admin",
                type: "PUT",
                dataType: "json",
                data: JSON.stringify({
                  name: "admin",
                  password: null,
                  roles: [],
                  type: "user",
                  _id: "org.couchdb.user:admin"
                }),
                success: function(data) {
                  Tangerine.settings.save({
                    "adminEnsured": true
                  });
                  return $.couch.logout({
                    success: function() {
                      return callback();
                    },
                    error: function() {
                      return console.log("Error logging out admin user");
                    }
                  });
                },
                error: function() {
                  return console.log("Error ensuring admin _user doc");
                }
              });
            }
          });
        });
      }
    });
  } else {
    return callback();
  }
};
